int Annuler_coup(int player_turn, int choix_menu, int x, int y, int direction, 
                 joueur *joueur_actif, joueur joueur1, joueur joueur2, 
                 joueur joueur3, joueur joueur4, int plateau[17][17], int N) {
    int choix;

    // Demande si le joueur veut annuler son coup
    printf("Souhaitez-vous annuler votre coup\n");
    printf("1. OUI 2. NON\n");
    scanf("%d", &choix);

    // Vérification d'entrée : seul 1 ou 2 est accepté
    while (choix != 1 && choix != 2) {
        printf("Erreur\n");
        scanf("%d", &choix);
    }

    // Si la partie est à 2 joueurs
    if (N == 2) {
        if (choix == 1) { 
            // Demande l'accord du second joueur pour l'annulation
            printf("Joueur %d est d'accord?\n", (player_turn) % 2 + 1);
            printf("1. OUI 2. NON\n");
            scanf("%d", &choix);

            // Vérification d'entrée
            while (choix != 1 && choix != 2) {
                printf("Erreur\n");
                scanf("%d", &choix);
            }

            // Si l'autre joueur accepte
            if (choix == 1) {
                if (choix_menu == 1) { 
                    // Annulation d'un déplacement de pion
                    plateau[joueur_actif->position.x][joueur_actif->position.y] = 0; // Réinitialisation de la case actuelle
                    
                    // Réinitialisation à la position précédente selon le joueur actif
                    if (player_turn == 1) {
                        plateau[joueur1.position.x][joueur1.position.y] = joueur1.pion;
                        joueur_actif->position.x = joueur1.position.x;
                        joueur_actif->position.y = joueur1.position.y;
                    } else {
                        plateau[joueur2.position.x][joueur2.position.y] = joueur2.pion;
                        joueur_actif->position.x = joueur2.position.x;
                        joueur_actif->position.y = joueur2.position.y;
                    }
                } else if (choix_menu == 2) {
                    // Annulation d'un placement de barrière
                    plateau[x][y] = 0; // Supprime la barrière principale
                    if (direction == 1) { // Haut
                        plateau[x - 1][y] = 0;
                    } else if (direction == 2) { // Bas
                        plateau[x + 1][y] = 0;
                    } else if (direction == 3) { // Gauche
                        plateau[x][y - 1] = 0;
                    } else if (direction == 4) { // Droite
                        plateau[x][y + 1] = 0;
                    }
                } else {
                    printf("Rejouer\n");
                }
            } else {
                return 0; // Annulation non acceptée
            }
        } else {
            return 0; // Pas d'annulation demandée
        }
    }

    // Si la partie est à 4 joueurs
    else {
        if (choix == 1) {
            // Demande l'accord de tous les joueurs pour l'annulation
            printf("Joueur %d est d'accord?\n", (player_turn) % 4 + 1);
            printf("1. OUI 2. NON\n");
            scanf("%d", &choix);

            // Vérification d'entrée
            while (choix != 1 && choix != 2) {
                printf("Erreur\n");
                scanf("%d", &choix);
            }

            if (choix == 1) {
                if (choix_menu == 1) { 
                    // Annulation d'un déplacement de pion
                    plateau[joueur_actif->position.x][joueur_actif->position.y] = 0;

                    // Réinitialisation selon le joueur actif
                    if (player_turn == 1) {
                        plateau[joueur1.position.x][joueur1.position.y] = joueur1.pion;
                        joueur_actif->position.x = joueur1.position.x;
                        joueur_actif->position.y = joueur1.position.y;
                    } else if (player_turn == 2) {
                        plateau[joueur2.position.x][joueur2.position.y] = joueur2.pion;
                        joueur_actif->position.x = joueur2.position.x;
                        joueur_actif->position.y = joueur2.position.y;
                    } else if (player_turn == 3) {
                        plateau[joueur3.position.x][joueur3.position.y] = joueur3.pion;
                        joueur_actif->position.x = joueur3.position.x;
                        joueur_actif->position.y = joueur3.position.y;
                    } else {
                        plateau[joueur4.position.x][joueur4.position.y] = joueur4.pion;
                        joueur_actif->position.x = joueur4.position.x;
                        joueur_actif->position.y = joueur4.position.y;
                    }
                } else if (choix_menu == 2) {
                    // Annulation d'un placement de barrière
                    plateau[x][y] = 0;
                    if (direction == 1) {
                        plateau[x - 1][y] = 0;
                    } else if (direction == 2) {
                        plateau[x + 1][y] = 0;
                    } else if (direction == 3) {
                        plateau[x][y - 1] = 0;
                    } else {
                        plateau[x][y + 1] = 0;
                    }
                } else {
                    printf("Rejouer\n");
                }
            } else {
                return 0; // Annulation non acceptée
            }
        }
    }
}
